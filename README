Why?
----

* In short: it's sad to see people re-implement terrible `smartctl -a` output parsers over and over again just to integrate it with one enterprise monitoring system or another.
* In order to make smartctl return programmer-friendly data (e.g. JSON), you basically need to rewrite a lot of ad-hoc printing code scattered all over the `ataprint.cpp`, and it's not much easier if you decide to drop the idea of implementing some command-line switch in favour of simply changing the output format. Oh, and don't forget about the smartd!
* libatasmart is ATA only, Linux only, and is supposed to have limited support for S.M.A.R.T. things.

How?
----

```
git clone https://github.com/vthriller/smart-rs.git
cd smart-rs/cli
cargo build --release
sudo ./target/release/smart-rs -i --json /dev/sda
```

What's supported?
-----------------

Platforms and transports:

* Linux: ATA¹, SCSI
* FreeBSD: ATA, SCSI

SCSI/ATA translation is also supported.

¹ Note that in Linux, ATA is only supported through SAT, although SG_IO kindly emulates that for SATA (and, possibly, PATA?) disks for us.

Features:

* TODO

Caveats:
--------

* only tested on little-endian systems,
* only tested with modern hard drives (although I doubt anyone would be interested in using this with some really old piece of equipment),
* only shows basic information and attributes; no feature toggles, no drive logs, virtually nothing is supported yet,
* debugging options (think `smartctl -r ataioctl,2` or `skdump`) are yet to be implemented,
* something else.
